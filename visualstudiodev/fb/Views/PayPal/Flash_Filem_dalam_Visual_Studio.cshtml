@{
	ViewBag.Title = "Flash_Filem_dalam_Visual_Studio";
}

<h2>Filem kilat di Projek Studio Visual</h2>
<p id="demo"></p>

<button onclick="clearInterval(myVar)">Stop time</button>

<script>
var myVar = setInterval(function(){myTimer()},1000);
function myTimer() {
	var d = new Date();
	document.getElementById("demo").innerHTML = d.toLocaleTimeString();
}
</script>
@{
	ViewBag.Title = "Home Page";
}
@using (Html.BeginForm("ValidateCommand", "PayPal"))
{
	<div>
		<table >
			<tr>
				<td>
					Nama Produk:
				</td>
				<td>
					<input type="text" name="product" value="Flash Movies in Visual Studio" readonly />
				</td>
			</tr>
			<tr>
				<td>
				   Jumlah Harga:
				</td>
				<td>
					RM <input type="text" name="totalPrice" value="14.80" readonly />
				</td>
			</tr>
			<tr>
				<td>
				</td>
				<td>
					<input type="submit" name="btnConfirm" value="Check Out with Paypal" />
				</td>
			</tr>
		</table>
	</div>
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0058)http://www.sapphiresteel.com/Flash-Movies-in-Visual-Studio -->
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/ss2_main.dwt" codeOutsideHTMLIsLocked="false" --><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">

<meta name="keywords" content="amethyst ruby steel flex actionscript flash adobe rails visual studio ide">
<link rel="stylesheet" href="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/spip_style.css" type="text/css">
<link href="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/ss2.css" rel="stylesheet" type="text/css">
<link href="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/ss2.css" rel="stylesheet" type="text/css"> <!-- DEVELOPMENT ONLY -->
<script src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/ss2_main.js" type="text/javascript"></script>

<!-- InstanceBeginEditable name="doctitle" -->
<!-- S2::ARTICLE -->
<!-- S2::MAIN LOOP-BEGIN -->

<title>SapphireSteel Software: Flash Movies in Visual Studio Projects</title>
<!-- InstanceEndEditable -->


<link rel="stylesheet" type="text/css" href="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/widget006.old.css" media="all"></head>
<body class="mainLayout" onload="onload=&quot;MM_preloadImages(&#39;IMG/ss2/navbar2/navbar2_r2_c1_f2.png&#39;,&#39;IMG/ss2/navbar2/navbar_products_f2.png&#39;,&#39;IMG/ss2/navbar2/navbar_store_f2.png&#39;,&#39;IMG/ss2/navbar2/navbar_support_f2.png&#39;,&#39;IMG/ss2/navbar2/navbar2_r2_c6_f2.png&#39;,&#39;IMG/ss2/navbar2/navbar_blog_f2.png&#39;);&quot;">

<div id="navbarcontainer">
 
<div id="navbar">

<table border="0" cellpadding="0" cellspacing="0" width="980">
<!-- fwtable fwsrc="navbar2.png" fwpage="Page 1" fwbase="navbar2.png" fwstyle="Dreamweaver" fwdocid = "1928997624" fwnested="0" -->
 

  <tbody><tr>
   <td colspan="7"><img name="navbar2_r1_c1" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r1_c1.png" width="980" height="68" border="0" id="navbar2_r1_c1" alt=""></td>
   <td><img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/spacer.gif" width="1" height="68" border="0" alt=""></td>
  </tr>
  <tr>
   <td><a href="http://www.sapphiresteel.com/" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar2_r2_c1&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar2_r2_c1_f2.png&#39;,1);"><img name="navbar2_r2_c1" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r2_c1.png" width="203" height="36" border="0" id="navbar2_r2_c1" alt=""></a></td>
   <td rowspan="2"><img name="navbar2_r2_c2" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r2_c2.png" width="400" height="52" border="0" id="navbar2_r2_c2" alt=""></td>
   <td><a href="http://www.sapphiresteel.com/Products/Products-Overview" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar_products&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar_products_f2.png&#39;,1);"><img name="navbar_products" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar_products.png" width="92" height="36" border="0" id="navbar_products" alt=""></a></td>
   <td><a href="http://www.sapphiresteel.com/Products/Store" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar_store&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar_store_f2.png&#39;,1);"><img name="navbar_store" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar_store.png" width="73" height="36" border="0" id="navbar_store" alt=""></a></td>
   <td><a href="http://www.sapphiresteel.com/Products/Support" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar_support&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar_support_f2.png&#39;,1);"><img name="navbar_support" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar_support.png" width="83" height="36" border="0" id="navbar_support" alt=""></a></td>
   <td><a href="http://www.sapphiresteel.com/forum/" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar2_r2_c6&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar2_r2_c6_f2.png&#39;,1);"><img name="navbar2_r2_c6" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r2_c6.png" width="66" height="36" border="0" id="navbar2_r2_c6" alt=""></a></td>
   <td><a href="http://www.sapphiresteel.com/Blog" onmouseout="MM_swapImgRestore();" onmouseover="MM_swapImage(&#39;navbar_blog&#39;,&#39;&#39;,&#39;IMG/ss2/navbar2/navbar_blog_f2.png&#39;,1);"><img name="navbar_blog" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar_blog.png" width="63" height="36" border="0" id="navbar_blog" alt=""></a></td>
   <td><img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/spacer.gif" width="1" height="36" border="0" alt=""></td>
  </tr>
  <tr>
   <td><img name="navbar2_r3_c1" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r3_c1.png" width="203" height="16" border="0" id="navbar2_r3_c1" alt=""></td>
   <td colspan="5"><img name="navbar2_r3_c3" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/navbar2_r3_c3.png" width="377" height="16" border="0" id="navbar2_r3_c3" alt=""></td>
   <td><img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/spacer.gif" width="1" height="16" border="0" alt=""></td>
  </tr>
</tbody></table>


  <!-- end #header -->
  </div>

</div>
<div id="centreRow">
<div id="container">
  
  <div id="mainContent">
<!-- InstanceBeginEditable name="mainContentArea" -->
<!-- Display article logo for this rubrique, if there is one, 
otherwise if there is a header for the rubrique, show that, 
other show title of rubrique  -->

<h1>Amethyst Tutorials</h1>
		
 
	
	
	
	
 
 

<!-- Back to section link -->

Back to
	
	<!--The parent section(s)-->
	<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/puce.gif" width="8" height="11" alt="-"><a href="http://www.sapphiresteel.com/Tutorials/">Tutorials</a>              
	
	<!--The parent section(s)-->
	<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/puce.gif" width="8" height="11" alt="-"><a href="http://www.sapphiresteel.com/Tutorials/Amethyst-Tutorials/">Amethyst Tutorials</a>              
 



   <!-- The header logo -->
  <!-- <div class="headerdiv"><img src="IMG/ss2/headers/the-blog-article.png" width="350" height="55" alt="the blog" /></div> -->
   <!-- articleIntro: above 'main box' -->
   <div class="articleIntro">
   <h1 class="blog-article-title">Flash Movies in Visual Studio Projects</h1>
  
	<div class="strapline">
	Amethyst lets you program Flash movie clips in Flash/ActionScript or Flex 
	</div>
	<!--     Only display data on Blog entries (rub1) -->
	
	</div> <!-- end:articleIntro -->

	<!-- main article in a box -->
	<div class="box-out">
	  <div class="cornertopleft"></div>
	  <div class="cornertopright"></div>
	  <div class="cornerbottomleft"></div>
	  <div class="cornerbottomright"></div>
	   
		
	  <div class="text-in-box"><!-- intro and body -->    
	   <div class="intro">
		<p>We’ve written before about <a href="http://www.sapphiresteel.com/Blog/Flash-IDE-Integration-With" class="spip_in">integrating Amethyst with the Adobe Flash IDE</a> so that Flash and Visual Studio developers can share the same codebase in order to use Amethyst’s advanced debugging and code editing. But you don’t have to use the Flash IDE. Amethyst can also create Flash applications (or ’movies’) by itself.</p>
		</div>  
	  
	  <p>A typical scenario would be one in which an ActionScript developer has a number of pre-made MovieClips (either published by the Flash IDE or by some other application capable of rendering Flash). The developer wants to use these clips as ‘resources’ - that is, as objects that can be loaded up and programmed as required. This is pretty simple to do in Amethyst. You can just embed the MovieClips as named assets into an ActionScript project and start coding.</p>

<p>Let me give you a very simple example. This will be a very basic (and, I have to confess, not very entertaining!) ‘game’ using a couple of movie clips. Each clip contains a shape which can be clicked in order to change its colour. The colour-change is done simply by moving to the next frame in the clip in response to each click.</p>

<p>Here I have decided to create a Flex 3 project (but Flex 4 works just as well)...</p>

<p><!-- htmlA --><span class="spip_document_1153 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip1.png" width="630" height="387" alt=""></span><!-- htmlB --></p>

<p>A Flex project gives me the option of compiling either with or without the Flex framework. If you don’t plan to use Flex at all, you could start an ActionScript project instead. The reason I have selected Flex is because I want to show you how simple it is to use MovieClips in <i>both</i> types of project: <i>ActionScript projects</i> (written entirely in ‘.as’ files in which the main class may extend MovieClip or Sprite) and <i>Flex projects</i> (with an Application defined in an MXML file).</p>

<p>Before going any further, let me explain how I created my MovieClips. To keep this easy to follow, I’ve made these clips as simple as can be. In the Adobe Flash IDE I’ve created two movie clips (called BallClip and RectangleClip), each of which has three frames. In the Flash IDE Library panel I selected each clip, popped up its properties dialog and set ‘Export for ActionScript’ to <i>true</i>. Then I published (compiled and saved) to an SWF file called <i>shape-assets.swf</i>. This file now contains my two MovieClips as named classes.</p>

<p><!-- htmlA --><span class="spip_document_1154 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip2.png" width="494" height="337" alt=""></span><!-- htmlB --></p>

<p>Now I copy this SWF into the <i>\src\assets</i> folder beneath my Amethyst project.</p>

<h3 class="spip">A Flash Movie</h3>
<p>I create an ActionScript file,  and I embed each of the MovieClips as Classes from the SWF, like this (here the name of the original symbol is shown in the ‘Embed’ directive and the name I will use in ActionScript is defined in the variable declaration that follows it):</p>

<div style="text-align: left;" class="spip_code" dir="ltr"><code>[Embed(source = "assets/shape-assets.swf", symbol = "BallClip")]<br>
private var Ball:Class;<br>
 &nbsp; &nbsp; &nbsp; &nbsp;<br>
[Embed(source = "assets/shape-assets.swf", symbol = "RectangleClip")]<br>
private var Oblong:Class;</code></div>
<p>I define two MovieClip object variables:</p>

<div style="text-align: left;" class="spip_code" dir="ltr"><code>private var ballclip : MovieClip; &nbsp; &nbsp;<br>
private var rectclip : MovieClip;</code></div>
<p>And when I want to create objects, I do so by calling the appropriate class constructor, using the Class variable names which I defined after importing each of the two clips:</p>

<div style="text-align: left;" class="spip_code" dir="ltr"><code>ballclip = new Ball();<br>
rectclip = new Oblong( );</code></div>
<p>The rest is pretty straightforward. I add the clips as children of my application and give them MouseClick event-handlers. The event handler (<i>onClick</i>) uses the event ’<i>target</i>’ property to determine which Clip was clicked and it moves to the next frame of that clip with each click. It moves back to frame 1 when all the frames have been displayed. This is pretty simple stuff, of course, but exactly the same techniques could be used when importing quite complex MovieClips and animating them sequentially or displaying specific clips in response to user interaction. Anyway, here’s the full code:</p>

<form action="" method="get"><div>
<input type="hidden" name="exec" value="">
<textarea readonly="readonly" cols="40" rows="52" class="spip_cadre" dir="ltr">package {
	import flash.display.MovieClip;
	import flash.events.MouseEvent;
	
	public class ActionScriptApp extends MovieClip {
				
		[Embed(source = "assets/shape-assets.swf", symbol = "BallClip")]
		private var Ball:Class;
		
		[Embed(source = "assets/shape-assets.swf", symbol = "RectangleClip")]
		private var Oblong:Class;

		private var ballclip : MovieClip;    
		private var rectclip : MovieClip;
		
		public function ActionScriptApp ( ) {        
			ballclip = new Ball();
			ballclip.x = 150;
			ballclip.y = 150;
			ballclip.gotoAndStop(0);
			this.addChild( ballclip );
			ballclip.addEventListener(MouseEvent.CLICK,onClick);    
			
			rectclip = new Oblong( );
			rectclip.x = 350;
			rectclip.y = 150;
			rectclip.gotoAndStop( 0 );
			this.addChild( rectclip );
			rectclip.addEventListener( MouseEvent.CLICK, onClick );

		}
		
		private function onClick ( e:MouseEvent ):void {    
			var f:int;
			var mc:MovieClip;
			mc = (e.target as MovieClip);
			f = mc.currentFrame;
			if ( f &lt; mc.framesLoaded ) {
				f++;
			}else {
				f = 1;
			}
			mc.gotoAndStop(f);
		}
	}
	
}</textarea></div></form>

<p>Press CTRL-F5 to run or F5 to debug this Flash program. When debugging you will have access to all the advanced features of the Amethyst debugger...</p>

<p><!-- htmlA --><span class="spip_document_1155 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip3.png" width="590" height="310" alt=""></span><!-- htmlB --></p>

<p>And you can interact with the program in the Flash Player...</p>

<p><!-- htmlA --><span class="spip_document_1156 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip4.png" width="331" height="288" alt=""></span><!-- htmlB --></p>

<h3 class="spip">A Flex Application</h3>
<p>Using MovieClips in Flex is only slightly more problematic. It turns out that most Flex components cannot accept MovieClips as children. Luckily, the common ancestor of Flex components, UIComponent, can. So I’ve just created a little utility class called MovieWrapper, which is a descendent of UIComponent that has just one function, <i>sizeTo()</i>, to make it easy to size a MovieWrapper object to some standard Flex container. Here it is:</p>

<form action="" method="get"><div>
<input type="hidden" name="exec" value="">
<textarea readonly="readonly" cols="40" rows="18" class="spip_cadre" dir="ltr">package {
	import mx.core.UIComponent;
	import flash.display.DisplayObjectContainer;
	
	public class MovieWrapper extends UIComponent{
		
		public function MovieWrapper ( ) {
			super();
		}
		
		public function sizeTo ( aContainer:DisplayObjectContainer ):void {            
			this.height = aContainer.height;
			this.width = aContainer.width;
		}
	}
	
}</textarea></div></form>

<p>And now we are ready to go. I’ve created a normal Flex Application (here it happens to be Flex 3 but it works just the same with Flex 4):</p>

<form action="" method="get"><div>
<input type="hidden" name="exec" value="">
<textarea readonly="readonly" cols="40" rows="12" class="spip_cadre" dir="ltr">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;mx:Application applicationComplete="init()" height="400" width="400" xmlns:mx="http://www.adobe.com/2006/mxml"&gt;
	&lt;mx:Script source="FlexApplication1.designer.as"/&gt;
	&lt;mx:Canvas backgroundColor="#ffff80" height="300" id="canvas" name="Canvas" width="300" x="100" y="100"/&gt;        
&lt;/mx:Application&gt;</textarea></div></form>

<p>Notice that the application contains a Canvas named ‘<i>canvas</i>’  and it executes the <i>init()</i> method on completion. This is the associated script file, <i>FlexApplication1.designer.as</i> (this happens to be an Amethyst ’code behind file’, hence the file name, but any script file will do):</p>

<form action="" method="get"><div>
<input type="hidden" name="exec" value="">
<textarea readonly="readonly" cols="40" rows="35" class="spip_cadre" dir="ltr">//
// Amethyst Designer file for FlexApplication1.mxml
//
import mx.events.*;
import flash.events.*;
import mx.core.UIComponent;

[Embed(source = "assets/shape-assets.swf", symbol = "BallClip")]
private var Ball:Class;

private var b:MovieClip;
private var i:int = 1;
private var mw:MovieWrapper;

public function init ( ) :void {    
	b = new Ball( );
	b.x = 150;
	b.y = 150;
	b.gotoAndStop( 0 );    
	mw = new MovieWrapper();
	mw.sizeTo( canvas );
	canvas.addChild( mw );
	mw.addChild( b );
	b.addEventListener( MouseEvent.CLICK, onClick );
}

private function onClick ( e:MouseEvent ):void {
	if ( b.currentFrame &lt; b.framesLoaded ) {
		i++;
	} else {
		i = 1;
	}
	b.gotoAndStop( i );
}</textarea></div></form>

<p>As you can see, most of the code is the same as in the ActionScript program I created earlier. This time I’ve only used one of the clips for brevity but you can use both if you wish. The main difference is the way in which the clip is added. Instead of adding it directly to the application or to the Canvas, I have created a MovieWrapper object and added the clip to that. The MovieWrapper is sized to the canvas and added to it. The MovieClip is then added to the MovieWrapper. The end result is that I now have my MovieClip right inside my Flex application.</p>

<p>I have both versions of this program in a single project the Solution Explorer (for real-world development you can group multiple projects inside one Solution) and when I want to switch from the Flash/ActionScript version to the Flex version, I just right-click the MXML file and select ‘Set as main’.</p>

<p><!-- htmlA --><span class="spip_document_1157 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip5.png" width="343" height="502" alt=""></span><!-- htmlB --></p>

<p>And now I can run this Flex application either in the Flash player or in a browser (and of course, I can debug as before)...</p>

<p><!-- htmlA --><span class="spip_document_1158 spip_documents spip_documents_center">
<img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/flashmovieclip6.png" width="480" height="485" alt=""></span><!-- htmlB --></p>

<p>So, in short, if you want to program Flash applications in Amethyst you have three main choices.:
<br><strong>1)</strong> You can share an existing Flash movie with the Flash IDE <a href="http://www.sapphiresteel.com/Blog/Flash-IDE-Integration-With" class="spip_in">as explained in a previous article</a>.
<br><strong>2)</strong>  Or you can create a Flash/ActionScript project from scratch in Amethyst and import MovieClips and other graphic and audio resources and program them entirely in Amethyst. 
<br><strong>3)</strong> Or you can import MovieClips into UIComponent ‘wrappers’ and use them in your Flex framework applications.</p>

<p>Using these three possible workflows makes it possible for ActionScript developers to work exclusively in Amethyst, using the full power of the Amethyst coding environment (with its extensive refactoring, IntelliSense and code formatting capabilities) and the integrated <i>Amethyst Cylon</i> debugger. If a codebase already exists, this may either be imported or shared with the Flash IDE so that Amethyst developers may work on the same code being used by Flash IDE developers. But if you wish to import Flash-based resources such as MovieClips and you do not need to share code with the Flash IDE, then you can create Flash/ActionScript or Flex movies and applications by importing existing movie clips and manipulating them programmatically as explained above.</p> 
	  </div> <!--text-in-box-->
	</div> <!-- box-out -->
	<!-- end: main article in a box -->
	
	<!-- footnotes - if any -->
	 <span class="smalltext"></span>

	
	<!-- S2::MAIN LOOP-END -->
 
  
<div id="bookmarksRow">                       
<!-- AddThis Button BEGIN -->
<a class="addthis_button" href="http://www.addthis.com/bookmark.php?v=250&username=huwcol"><img src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/lg-share-en.gif" width="125" height="16" alt="Bookmark and Share" style="border:0"></a><script type="text/javascript" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/addthis_widget.js"></script><div id="_atssh" style="visibility: hidden; height: 1px; width: 1px; position: absolute; z-index: 100000;"><iframe id="_atssh248" title="AddThis utility frame" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/sh174.htm" style="height: 1px; width: 1px; position: absolute; z-index: 100000; border: 0px; left: 0px; top: 0px;"></iframe></div><script type="text/javascript" src="./SapphireSteel Software  Flash Movies in Visual Studio Projects_files/core157.js"></script>
<!-- AddThis Button END -->


 <!-- Keywords -->
			
				&nbsp;&nbsp;Keywords:
				
				  &nbsp;<a href="http://www.sapphiresteel.com/ActionScript">ActionScript</a>
				
				  &nbsp;<a href="http://www.sapphiresteel.com/Amethyst">Amethyst</a>
				
				  &nbsp;<a href="http://www.sapphiresteel.com/Flash">Flash</a>
				
				  &nbsp;<a href="http://www.sapphiresteel.com/Flex">Flex</a>
				
				  &nbsp;<a href="http://www.sapphiresteel.com/tutorial">tutorial</a>
				
				
			 
 <!-- End: Keywords -->



  
</div>     <!-- end:bookmarksRow -->


					<!--SPIP :: attached documents (e.g. pdf/mp3)-->
					
					<!--End of attached documents-->




<!-- Only put a comment link on articles in rubrique 1 (the Blog)
However, leave forums in plaace to display comments left on older articles
in other sections -->


	
	<!-- InstanceEndEditable -->
	<!-- end #mainContent -->
  </div>
  
   </div>
  <!-- end #container -->
  </div> <!-- centreRow -->
  <div id="footer">

	 <div class="footernav">
	   <div class="footercolumn">
		<div class="footercolumnheader">Site Navigation</div>
		<ul class="footerlinks">
		  <li><a href="http://www.sapphiresteel.com/">Home</a></li>
		  <li><a href="http://www.sapphiresteel.com/spip.php?page=plan">Site Map</a></li>
		  <li><a href="http://www.sapphiresteel.com/spip.php?page=recherche">Search</a></li> 
		  <li><a href="http://www.sapphiresteel.com/Blog">Blog</a></li>         
		</ul>
	  </div>
	   <div class="footercolumn">
		<div class="footercolumnheader">Products</div>
		<ul class="footerlinks">
		  <li><a href="http://www.sapphiresteel.com/Products/amethyst-ide/Amethyst-Product-Page">Amethyst</a></li>
		  <li><a href="http://www.sapphiresteel.com/spip.php?page=amethyst-feature-list">Amethyst Feature List</a></li>
		  <li><a href="http://www.sapphiresteel.com/Products/Ruby-In-Steel/Ruby-In-Steel-Developer-Overview">Sapphire</a></li> 
		  <li><a href="http://www.sapphiresteel.com/spip.php?page=feature-list">Sapphire Feature List</a></li>  
		  <li><a href="http://www.sapphiresteel.com/Products/Store">Buy</a></li>         
		</ul>
	  </div>
	   <div class="footercolumn">
		<div class="footercolumnheader">Downloads &amp; Support</div>
		<ul class="footerlinks">
			<li><a href="http://www.sapphiresteel.com/Products/amethyst-ide/Download-Amethyst-Adobe-Flash">Amethyst Download</a></li>
		   <li><a href="http://www.sapphiresteel.com/spip?page=download">Sapphire Download</a></li>  
		   <li><a href="http://www.sapphiresteel.com/Products/Support">Product Support</a></li>
		  <li><a href="http://www.sapphiresteel.com/forum">Forum</a></li>
		  <li><a href="http://www.sapphiresteel.com/Tutorials/">Tutorials</a></li>                       
		</ul>
	  </div>
	   <div class="footercolumn">
		<div class="footercolumnheader">Company</div>
		<ul class="footerlinks">
		  <li><a href="http://www.sapphiresteel.com/info/company/about-us">About</a></li>
		  <li><a href="http://www.sapphiresteel.com/spip?page=contact">Contact</a></li>       
		</ul>
	  </div>
	   <div class="footercolumn">
		<div class="footercolumnheader">More...</div>
		<ul class="footerlinks">
		  <li><a href="http://www.sapphiresteel.com/ruby-programming/The-Book-Of-Ruby">The Book Of Ruby</a></li>
		  <li><a href="http://www.sapphiresteel.com/ruby-programming/The-Little-Book-Of-Ruby">The Little Book Of Ruby</a></li>  
		  <li><a href="http://www.sapphiresteel.com/spip.php?page=backend&id_rubrique=1">RSS Feed</a></li>
		</ul>
	  </div>
	</div>
</div>    

	<!-- end #footer -->
  <div id="bottomRow">
<span class="smalltext">  © SapphireSteel Software 2014</span>
  </div>
  
  



<!-- InstanceEnd -->
</body></html>
